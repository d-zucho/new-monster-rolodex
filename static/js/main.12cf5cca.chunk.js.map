{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/searchBox/SearchBox.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","handleChange","onChange","type","placeholder","App","addSearchText","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,2BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,kCAAKN,EAAMG,QAAQI,aCPZC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,EAAhC,SACGA,EAAQG,MADAH,EAAQC,WCLdO,G,MAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACE,uBACEX,UAAU,SACVY,SAAUD,EACVE,KAAK,SACLC,YAAY,sBCgCHC,G,wDAnCb,aAAe,IAAD,8BACZ,gBAaFC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZC,YAAaF,EAAEG,OAAOC,SAdxB,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAS/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC5B,GAAD,OACvCA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,aAAciB,KAAKZ,gBAC9B,cAAC,EAAD,CAAUR,SAAUqB,W,GA9BVI,cCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.12cf5cca.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.monster.id}}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{props.monster.name}</h2>\n      <p> {props.monster.email}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Card } from '../card/Card'\nimport './card-list.styles.css'\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster}>\n          {monster.name}\n        </Card>\n      ))}\n      {/* Passing monster in as a prop in the h1, is passing the individual monster (through the map function) as a prop to the Card Component */}\n    </div>\n  )\n}\n","import React from 'react'\nimport './searchBox.styles.css'\n\nexport const SearchBox = ({ handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      onChange={handleChange}\n      type=\"search\"\n      placeholder=\"search monsters\"\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/CardList'\nimport { SearchBox } from './components/searchBox/SearchBox'\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [], //\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }))\n  }\n\n  addSearchText = (e) => {\n    this.setState({\n      searchField: e.target.value,\n    })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"app\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox handleChange={this.addSearchText} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}